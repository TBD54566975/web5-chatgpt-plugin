Explains the did API

-----

Overview
The did class is responsible for providing operations related to DIDs

Methods

create(method, options)
Enables generation of DIDs for a supported set of DID Methods. The output is method-specific, and handles things like key generation and assembly of DID Documents that can be published to DID networks.

NOTE
You do not usually need to manually invoke this, as the Web5.connect() method already acquires a DID for the user (either by direct creation or connection to an identity agent app).

Parameters
method: type is string: The method on which to create the did. Supported methods are: 'ion' and 'key'
options type is CreateOptions (optiona): Enables customization of the DID formation based on the DID method

Return Value: The created DID

//Code Example
const myDid = await web5.did.create('ion');


resolve(did):
Resolves a DID into a DID document by using the "read" operation of the applicable DID method. DIDs that are resolved are cached for a default of 15 minutes.
DIDs need to be resolved to their document (that contains all the information of the did you want to reach).

Parameters
did type is string: The decentralized identifier to resolve

Return Value
result: type DidResolutionResult: DID resolution result which includes DID Document and its metadata


// Code Example:
const myDid = 'did:key:z6MkhvthBZDxVvLUswRey729CquxMiaoYXrT5SYbCAATc8V9';
const didDocument = await web5.did.resolve(myDid);

