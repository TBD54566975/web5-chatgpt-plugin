To get going quickly with web5.js, follow these instructions to setup a node.js javascript project that uses web5 and shows a range of actions.

-----


command line: npm install @web5/api


# modify package.json:
{
  "dependencies": {
    "@web5/api": "0.8.1"
  },
  "type": "module"
}

# create an index.js


mkdir src
cd src
touch index.js


# in index.js: 

import { Web5 } from '@web5/api';


// The Web5 class is an isolated API object for doing all things Web5 and the connect() function creates an instance of Web5.
// In Web5 apps, a user’s unique identifier - like an email address - is called a Decentralized Identifier (DID). We are building a decentralized app, so your users are using identifiers that aren't tied to a centralized authority.
// In index.js below the import statement, create a new instance of Web5:

const { web5, did: aliceDid } = await Web5.connect();


// A DWN is a personal data store - a platform for messages, pictures, videos, medical records, and just about any content a user may want to store.


// Add the following to index.js:

const { record } = await web5.dwn.records.create({
  data: "Hello Web5",
  message: {
    dataFormat: 'text/plain',
  },
});


// Given permission from the user, your app can delete records from their DWN. Similar to reading, we’ll use the record object to remove the record.

// Add the following to index.js:

const deleteResult = await record.delete();